/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_NodeosSwigLoggerModule_WRAP_H_
#define SWIG_NodeosSwigLoggerModule_WRAP_H_

class SwigDirector_swig_logger_base : public swig_logger_base, public Swig::Director {

public:
    SwigDirector_swig_logger_base();
    virtual ~SwigDirector_swig_logger_base();
    virtual void on_deep_mind_version(std::string const name, uint const major, uint const minor);
    virtual void on_abidump_start(uint32_t block_num, uint64_t global_sequence_num);
    virtual void on_abidump_abi(uint64_t name, uint8_t abi_data[]);
    virtual void on_abidump_end();
    virtual void on_start_block(uint32_t start_block);
    virtual void on_accepted_block(uint32_t num, uint8_t blk[]);
    virtual void on_switch_forks(uint8_t from_id[32], uint8_t to_id[32]);
    virtual void on_error(uint8_t id[32], uint8_t trx[]);
    virtual void on_onblock(uint8_t id[32], uint8_t trx[]);
    virtual void on_applied_transaction(uint32_t i, uint8_t traces[]);
    virtual void on_add_ram_correction(uint32_t action_id, int64_t correction_id, std::string event_id, uint64_t payer, uint64_t delta);
    virtual void on_input_action(uint32_t action_id);
    virtual void on_require_recipient(uint32_t action_id);
    virtual void on_send_inline(uint32_t action_id);
    virtual void on_send_context_free_inline(uint32_t action_id);
    virtual void on_cancel_deferred(__uint8_t qual, uint32_t action_id, uint64_t sender, uint8_t sender_id[], uint64_t payer, uint32_t published, uint32_t delay, uint32_t expiration, uint8_t trx_id[], uint8_t trx[]);
    virtual void on_send_deferred(__uint8_t qual, uint32_t action_id, uint64_t sender, uint8_t sender_id[], uint64_t payer, uint32_t published, uint32_t delay, uint32_t expiration, uint8_t trx_id[], uint8_t trx[]);
    virtual void on_create_deferred(__uint8_t qual, uint32_t action_id, uint64_t sender, uint8_t sender_id[], uint64_t payer, uint32_t published, uint32_t delay, uint32_t expiration, uint8_t trx_id[], uint8_t trx[]);
    virtual void on_fail_deferred(uint32_t action_id);
    virtual void on_create_table(uint32_t action_id, uint64_t code, uint64_t scope, uint64_t table, uint64_t payer);
    virtual void on_remove_table(uint32_t action_id, uint64_t code, uint64_t scope, uint64_t table, uint64_t payer);
    virtual void on_db_store_i64(uint32_t action_id, uint64_t payer, uint64_t table_code, uint64_t scope, uint64_t table_name, uint64_t primkey, uint8_t ndata[]);
    virtual void on_db_update_i64(uint32_t action_id, uint64_t payer, uint64_t table_code, uint64_t scope, uint64_t table_name, uint64_t primkey, uint8_t odata[], uint8_t ndata[]);
    virtual void on_db_remove_i64(uint32_t action_id, uint64_t payer, uint64_t table_code, uint64_t scope, uint64_t table_name, uint64_t primkey, uint8_t odata[]);
    virtual void on_ram_event(uint32_t action_id, std::basic_string< char > event_id, std::basic_string< char > family, std::basic_string< char > operation, std::basic_string< char > legacy_tag, uint64_t payer, uint64_t new_usage, int64_t delta);
    virtual void on_create_permission(uint32_t action_id, int64_t permission_id, uint8_t data[]);
    virtual void on_modify_permission(uint32_t action_id, int64_t permission_id, uint8_t opdata[], uint8_t npdata[]);
    virtual void on_remove_permission(uint32_t action_id, int64_t permission_id, uint8_t data[]);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback6_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback7_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback8_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback9_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback10_t)(void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback11_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback12_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback13_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback14_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback15_t)(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback16_t)(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback17_t)(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback18_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback19_t)(void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback20_t)(void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback21_t)(void *, void *, void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback22_t)(void *, void *, void *, void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback23_t)(void *, void *, void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback24_t)(void *, void *, void *, void *, void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback25_t)(void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback26_t)(void *, void *, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback27_t)(void *, void *, void *);
    void swig_connect_director(SWIG_Callback0_t callbackon_deep_mind_version, SWIG_Callback1_t callbackon_abidump_start, SWIG_Callback2_t callbackon_abidump_abi, SWIG_Callback3_t callbackon_abidump_end, SWIG_Callback4_t callbackon_start_block, SWIG_Callback5_t callbackon_accepted_block, SWIG_Callback6_t callbackon_switch_forks, SWIG_Callback7_t callbackon_error, SWIG_Callback8_t callbackon_onblock, SWIG_Callback9_t callbackon_applied_transaction, SWIG_Callback10_t callbackon_add_ram_correction, SWIG_Callback11_t callbackon_input_action, SWIG_Callback12_t callbackon_require_recipient, SWIG_Callback13_t callbackon_send_inline, SWIG_Callback14_t callbackon_send_context_free_inline, SWIG_Callback15_t callbackon_cancel_deferred, SWIG_Callback16_t callbackon_send_deferred, SWIG_Callback17_t callbackon_create_deferred, SWIG_Callback18_t callbackon_fail_deferred, SWIG_Callback19_t callbackon_create_table, SWIG_Callback20_t callbackon_remove_table, SWIG_Callback21_t callbackon_db_store_i64, SWIG_Callback22_t callbackon_db_update_i64, SWIG_Callback23_t callbackon_db_remove_i64, SWIG_Callback24_t callbackon_ram_event, SWIG_Callback25_t callbackon_create_permission, SWIG_Callback26_t callbackon_modify_permission, SWIG_Callback27_t callbackon_remove_permission);

private:
    SWIG_Callback0_t swig_callbackon_deep_mind_version;
    SWIG_Callback1_t swig_callbackon_abidump_start;
    SWIG_Callback2_t swig_callbackon_abidump_abi;
    SWIG_Callback3_t swig_callbackon_abidump_end;
    SWIG_Callback4_t swig_callbackon_start_block;
    SWIG_Callback5_t swig_callbackon_accepted_block;
    SWIG_Callback6_t swig_callbackon_switch_forks;
    SWIG_Callback7_t swig_callbackon_error;
    SWIG_Callback8_t swig_callbackon_onblock;
    SWIG_Callback9_t swig_callbackon_applied_transaction;
    SWIG_Callback10_t swig_callbackon_add_ram_correction;
    SWIG_Callback11_t swig_callbackon_input_action;
    SWIG_Callback12_t swig_callbackon_require_recipient;
    SWIG_Callback13_t swig_callbackon_send_inline;
    SWIG_Callback14_t swig_callbackon_send_context_free_inline;
    SWIG_Callback15_t swig_callbackon_cancel_deferred;
    SWIG_Callback16_t swig_callbackon_send_deferred;
    SWIG_Callback17_t swig_callbackon_create_deferred;
    SWIG_Callback18_t swig_callbackon_fail_deferred;
    SWIG_Callback19_t swig_callbackon_create_table;
    SWIG_Callback20_t swig_callbackon_remove_table;
    SWIG_Callback21_t swig_callbackon_db_store_i64;
    SWIG_Callback22_t swig_callbackon_db_update_i64;
    SWIG_Callback23_t swig_callbackon_db_remove_i64;
    SWIG_Callback24_t swig_callbackon_ram_event;
    SWIG_Callback25_t swig_callbackon_create_permission;
    SWIG_Callback26_t swig_callbackon_modify_permission;
    SWIG_Callback27_t swig_callbackon_remove_permission;
    void swig_init_callbacks();
};


#endif
