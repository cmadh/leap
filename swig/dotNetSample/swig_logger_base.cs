//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class swig_logger_base : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal swig_logger_base(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(swig_logger_base obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~swig_logger_base() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NodeosSwigLoggerModulePINVOKE.delete_swig_logger_base(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual void on_deep_mind_version(SWIGTYPE_p_std__string name, SWIGTYPE_p_uint major, SWIGTYPE_p_uint minor) {
    if (SwigDerivedClassHasMethod("on_deep_mind_version", swigMethodTypes0)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_deep_mind_versionSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_std__string.getCPtr(name), SWIGTYPE_p_uint.getCPtr(major), SWIGTYPE_p_uint.getCPtr(minor)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_deep_mind_version(swigCPtr, SWIGTYPE_p_std__string.getCPtr(name), SWIGTYPE_p_uint.getCPtr(major), SWIGTYPE_p_uint.getCPtr(minor));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_abidump_start(SWIGTYPE_p_uint32_t block_num, SWIGTYPE_p_uint64_t global_sequence_num) {
    if (SwigDerivedClassHasMethod("on_abidump_start", swigMethodTypes1)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_abidump_startSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(block_num), SWIGTYPE_p_uint64_t.getCPtr(global_sequence_num)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_abidump_start(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(block_num), SWIGTYPE_p_uint64_t.getCPtr(global_sequence_num));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_abidump_abi(SWIGTYPE_p_uint64_t name, SWIGTYPE_p_uint8_t abi_data) {
    if (SwigDerivedClassHasMethod("on_abidump_abi", swigMethodTypes2)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_abidump_abiSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(name), SWIGTYPE_p_uint8_t.getCPtr(abi_data)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_abidump_abi(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(name), SWIGTYPE_p_uint8_t.getCPtr(abi_data));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_abidump_end() {
    if (SwigDerivedClassHasMethod("on_abidump_end", swigMethodTypes3)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_abidump_endSwigExplicitswig_logger_base(swigCPtr); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_abidump_end(swigCPtr);
  }

  public virtual void on_start_block(SWIGTYPE_p_uint32_t start_block) {
    if (SwigDerivedClassHasMethod("on_start_block", swigMethodTypes4)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_start_blockSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(start_block)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_start_block(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(start_block));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_accepted_block(SWIGTYPE_p_uint32_t num, SWIGTYPE_p_uint8_t blk) {
    if (SwigDerivedClassHasMethod("on_accepted_block", swigMethodTypes5)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_accepted_blockSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(num), SWIGTYPE_p_uint8_t.getCPtr(blk)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_accepted_block(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(num), SWIGTYPE_p_uint8_t.getCPtr(blk));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_switch_forks(SWIGTYPE_p_uint8_t from_id, SWIGTYPE_p_uint8_t to_id) {
    if (SwigDerivedClassHasMethod("on_switch_forks", swigMethodTypes6)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_switch_forksSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(from_id), SWIGTYPE_p_uint8_t.getCPtr(to_id)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_switch_forks(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(from_id), SWIGTYPE_p_uint8_t.getCPtr(to_id));
  }

  public virtual void on_error(SWIGTYPE_p_uint8_t id, SWIGTYPE_p_uint8_t trx) {
    if (SwigDerivedClassHasMethod("on_error", swigMethodTypes7)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_errorSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(id), SWIGTYPE_p_uint8_t.getCPtr(trx)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_error(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(id), SWIGTYPE_p_uint8_t.getCPtr(trx));
  }

  public virtual void on_onblock(SWIGTYPE_p_uint8_t id, SWIGTYPE_p_uint8_t trx) {
    if (SwigDerivedClassHasMethod("on_onblock", swigMethodTypes8)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_onblockSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(id), SWIGTYPE_p_uint8_t.getCPtr(trx)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_onblock(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(id), SWIGTYPE_p_uint8_t.getCPtr(trx));
  }

  public virtual void on_applied_transaction(SWIGTYPE_p_uint32_t i, SWIGTYPE_p_uint8_t traces) {
    if (SwigDerivedClassHasMethod("on_applied_transaction", swigMethodTypes9)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_applied_transactionSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), SWIGTYPE_p_uint8_t.getCPtr(traces)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_applied_transaction(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), SWIGTYPE_p_uint8_t.getCPtr(traces));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_add_ram_correction(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_int64_t correction_id, SWIGTYPE_p_std__string event_id, SWIGTYPE_p_uint64_t payer, SWIGTYPE_p_uint64_t delta) {
    if (SwigDerivedClassHasMethod("on_add_ram_correction", swigMethodTypes10)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_add_ram_correctionSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_int64_t.getCPtr(correction_id), SWIGTYPE_p_std__string.getCPtr(event_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(delta)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_add_ram_correction(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_int64_t.getCPtr(correction_id), SWIGTYPE_p_std__string.getCPtr(event_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(delta));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_input_action(SWIGTYPE_p_uint32_t action_id) {
    if (SwigDerivedClassHasMethod("on_input_action", swigMethodTypes11)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_input_actionSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_input_action(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_require_recipient(SWIGTYPE_p_uint32_t action_id) {
    if (SwigDerivedClassHasMethod("on_require_recipient", swigMethodTypes12)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_require_recipientSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_require_recipient(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_send_inline(SWIGTYPE_p_uint32_t action_id) {
    if (SwigDerivedClassHasMethod("on_send_inline", swigMethodTypes13)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_send_inlineSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_send_inline(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_send_context_free_inline(SWIGTYPE_p_uint32_t action_id) {
    if (SwigDerivedClassHasMethod("on_send_context_free_inline", swigMethodTypes14)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_send_context_free_inlineSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_send_context_free_inline(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_cancel_deferred(SWIGTYPE_p___uint8_t qual, SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_uint64_t sender, SWIGTYPE_p_uint8_t sender_id, SWIGTYPE_p_uint64_t payer, SWIGTYPE_p_uint32_t published, SWIGTYPE_p_uint32_t delay, SWIGTYPE_p_uint32_t expiration, SWIGTYPE_p_uint8_t trx_id, SWIGTYPE_p_uint8_t trx) {
    if (SwigDerivedClassHasMethod("on_cancel_deferred", swigMethodTypes15)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_cancel_deferredSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p___uint8_t.getCPtr(qual), SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(sender), SWIGTYPE_p_uint8_t.getCPtr(sender_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint32_t.getCPtr(published), SWIGTYPE_p_uint32_t.getCPtr(delay), SWIGTYPE_p_uint32_t.getCPtr(expiration), SWIGTYPE_p_uint8_t.getCPtr(trx_id), SWIGTYPE_p_uint8_t.getCPtr(trx)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_cancel_deferred(swigCPtr, SWIGTYPE_p___uint8_t.getCPtr(qual), SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(sender), SWIGTYPE_p_uint8_t.getCPtr(sender_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint32_t.getCPtr(published), SWIGTYPE_p_uint32_t.getCPtr(delay), SWIGTYPE_p_uint32_t.getCPtr(expiration), SWIGTYPE_p_uint8_t.getCPtr(trx_id), SWIGTYPE_p_uint8_t.getCPtr(trx));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_send_deferred(SWIGTYPE_p___uint8_t qual, SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_uint64_t sender, SWIGTYPE_p_uint8_t sender_id, SWIGTYPE_p_uint64_t payer, SWIGTYPE_p_uint32_t published, SWIGTYPE_p_uint32_t delay, SWIGTYPE_p_uint32_t expiration, SWIGTYPE_p_uint8_t trx_id, SWIGTYPE_p_uint8_t trx) {
    if (SwigDerivedClassHasMethod("on_send_deferred", swigMethodTypes16)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_send_deferredSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p___uint8_t.getCPtr(qual), SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(sender), SWIGTYPE_p_uint8_t.getCPtr(sender_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint32_t.getCPtr(published), SWIGTYPE_p_uint32_t.getCPtr(delay), SWIGTYPE_p_uint32_t.getCPtr(expiration), SWIGTYPE_p_uint8_t.getCPtr(trx_id), SWIGTYPE_p_uint8_t.getCPtr(trx)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_send_deferred(swigCPtr, SWIGTYPE_p___uint8_t.getCPtr(qual), SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(sender), SWIGTYPE_p_uint8_t.getCPtr(sender_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint32_t.getCPtr(published), SWIGTYPE_p_uint32_t.getCPtr(delay), SWIGTYPE_p_uint32_t.getCPtr(expiration), SWIGTYPE_p_uint8_t.getCPtr(trx_id), SWIGTYPE_p_uint8_t.getCPtr(trx));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_create_deferred(SWIGTYPE_p___uint8_t qual, SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_uint64_t sender, SWIGTYPE_p_uint8_t sender_id, SWIGTYPE_p_uint64_t payer, SWIGTYPE_p_uint32_t published, SWIGTYPE_p_uint32_t delay, SWIGTYPE_p_uint32_t expiration, SWIGTYPE_p_uint8_t trx_id, SWIGTYPE_p_uint8_t trx) {
    if (SwigDerivedClassHasMethod("on_create_deferred", swigMethodTypes17)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_create_deferredSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p___uint8_t.getCPtr(qual), SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(sender), SWIGTYPE_p_uint8_t.getCPtr(sender_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint32_t.getCPtr(published), SWIGTYPE_p_uint32_t.getCPtr(delay), SWIGTYPE_p_uint32_t.getCPtr(expiration), SWIGTYPE_p_uint8_t.getCPtr(trx_id), SWIGTYPE_p_uint8_t.getCPtr(trx)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_create_deferred(swigCPtr, SWIGTYPE_p___uint8_t.getCPtr(qual), SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(sender), SWIGTYPE_p_uint8_t.getCPtr(sender_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint32_t.getCPtr(published), SWIGTYPE_p_uint32_t.getCPtr(delay), SWIGTYPE_p_uint32_t.getCPtr(expiration), SWIGTYPE_p_uint8_t.getCPtr(trx_id), SWIGTYPE_p_uint8_t.getCPtr(trx));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_fail_deferred(SWIGTYPE_p_uint32_t action_id) {
    if (SwigDerivedClassHasMethod("on_fail_deferred", swigMethodTypes18)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_fail_deferredSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_fail_deferred(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_create_table(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_uint64_t code, SWIGTYPE_p_uint64_t scope, SWIGTYPE_p_uint64_t table, SWIGTYPE_p_uint64_t payer) {
    if (SwigDerivedClassHasMethod("on_create_table", swigMethodTypes19)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_create_tableSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table), SWIGTYPE_p_uint64_t.getCPtr(payer)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_create_table(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table), SWIGTYPE_p_uint64_t.getCPtr(payer));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_remove_table(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_uint64_t code, SWIGTYPE_p_uint64_t scope, SWIGTYPE_p_uint64_t table, SWIGTYPE_p_uint64_t payer) {
    if (SwigDerivedClassHasMethod("on_remove_table", swigMethodTypes20)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_remove_tableSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table), SWIGTYPE_p_uint64_t.getCPtr(payer)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_remove_table(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table), SWIGTYPE_p_uint64_t.getCPtr(payer));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_db_store_i64(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_uint64_t payer, SWIGTYPE_p_uint64_t table_code, SWIGTYPE_p_uint64_t scope, SWIGTYPE_p_uint64_t table_name, SWIGTYPE_p_uint64_t primkey, SWIGTYPE_p_uint8_t ndata) {
    if (SwigDerivedClassHasMethod("on_db_store_i64", swigMethodTypes21)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_db_store_i64SwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(table_code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table_name), SWIGTYPE_p_uint64_t.getCPtr(primkey), SWIGTYPE_p_uint8_t.getCPtr(ndata)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_db_store_i64(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(table_code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table_name), SWIGTYPE_p_uint64_t.getCPtr(primkey), SWIGTYPE_p_uint8_t.getCPtr(ndata));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_db_update_i64(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_uint64_t payer, SWIGTYPE_p_uint64_t table_code, SWIGTYPE_p_uint64_t scope, SWIGTYPE_p_uint64_t table_name, SWIGTYPE_p_uint64_t primkey, SWIGTYPE_p_uint8_t odata, SWIGTYPE_p_uint8_t ndata) {
    if (SwigDerivedClassHasMethod("on_db_update_i64", swigMethodTypes22)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_db_update_i64SwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(table_code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table_name), SWIGTYPE_p_uint64_t.getCPtr(primkey), SWIGTYPE_p_uint8_t.getCPtr(odata), SWIGTYPE_p_uint8_t.getCPtr(ndata)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_db_update_i64(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(table_code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table_name), SWIGTYPE_p_uint64_t.getCPtr(primkey), SWIGTYPE_p_uint8_t.getCPtr(odata), SWIGTYPE_p_uint8_t.getCPtr(ndata));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_db_remove_i64(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_uint64_t payer, SWIGTYPE_p_uint64_t table_code, SWIGTYPE_p_uint64_t scope, SWIGTYPE_p_uint64_t table_name, SWIGTYPE_p_uint64_t primkey, SWIGTYPE_p_uint8_t odata) {
    if (SwigDerivedClassHasMethod("on_db_remove_i64", swigMethodTypes23)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_db_remove_i64SwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(table_code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table_name), SWIGTYPE_p_uint64_t.getCPtr(primkey), SWIGTYPE_p_uint8_t.getCPtr(odata)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_db_remove_i64(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(table_code), SWIGTYPE_p_uint64_t.getCPtr(scope), SWIGTYPE_p_uint64_t.getCPtr(table_name), SWIGTYPE_p_uint64_t.getCPtr(primkey), SWIGTYPE_p_uint8_t.getCPtr(odata));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_ram_event(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_std__basic_stringT_char_t event_id, SWIGTYPE_p_std__basic_stringT_char_t family, SWIGTYPE_p_std__basic_stringT_char_t operation, SWIGTYPE_p_std__basic_stringT_char_t legacy_tag, SWIGTYPE_p_uint64_t payer, SWIGTYPE_p_uint64_t new_usage, SWIGTYPE_p_int64_t delta) {
    if (SwigDerivedClassHasMethod("on_ram_event", swigMethodTypes24)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_ram_eventSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_std__basic_stringT_char_t.getCPtr(event_id), SWIGTYPE_p_std__basic_stringT_char_t.getCPtr(family), SWIGTYPE_p_std__basic_stringT_char_t.getCPtr(operation), SWIGTYPE_p_std__basic_stringT_char_t.getCPtr(legacy_tag), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(new_usage), SWIGTYPE_p_int64_t.getCPtr(delta)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_ram_event(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_std__basic_stringT_char_t.getCPtr(event_id), SWIGTYPE_p_std__basic_stringT_char_t.getCPtr(family), SWIGTYPE_p_std__basic_stringT_char_t.getCPtr(operation), SWIGTYPE_p_std__basic_stringT_char_t.getCPtr(legacy_tag), SWIGTYPE_p_uint64_t.getCPtr(payer), SWIGTYPE_p_uint64_t.getCPtr(new_usage), SWIGTYPE_p_int64_t.getCPtr(delta));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_create_permission(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_int64_t permission_id, SWIGTYPE_p_uint8_t data) {
    if (SwigDerivedClassHasMethod("on_create_permission", swigMethodTypes25)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_create_permissionSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_int64_t.getCPtr(permission_id), SWIGTYPE_p_uint8_t.getCPtr(data)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_create_permission(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_int64_t.getCPtr(permission_id), SWIGTYPE_p_uint8_t.getCPtr(data));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_modify_permission(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_int64_t permission_id, SWIGTYPE_p_uint8_t opdata, SWIGTYPE_p_uint8_t npdata) {
    if (SwigDerivedClassHasMethod("on_modify_permission", swigMethodTypes26)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_modify_permissionSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_int64_t.getCPtr(permission_id), SWIGTYPE_p_uint8_t.getCPtr(opdata), SWIGTYPE_p_uint8_t.getCPtr(npdata)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_modify_permission(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_int64_t.getCPtr(permission_id), SWIGTYPE_p_uint8_t.getCPtr(opdata), SWIGTYPE_p_uint8_t.getCPtr(npdata));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_remove_permission(SWIGTYPE_p_uint32_t action_id, SWIGTYPE_p_int64_t permission_id, SWIGTYPE_p_uint8_t data) {
    if (SwigDerivedClassHasMethod("on_remove_permission", swigMethodTypes27)) NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_remove_permissionSwigExplicitswig_logger_base(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_int64_t.getCPtr(permission_id), SWIGTYPE_p_uint8_t.getCPtr(data)); else NodeosSwigLoggerModulePINVOKE.swig_logger_base_on_remove_permission(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(action_id), SWIGTYPE_p_int64_t.getCPtr(permission_id), SWIGTYPE_p_uint8_t.getCPtr(data));
    if (NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Pending) throw NodeosSwigLoggerModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public swig_logger_base() : this(NodeosSwigLoggerModulePINVOKE.new_swig_logger_base(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("on_deep_mind_version", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateswig_logger_base_0(SwigDirectorMethodon_deep_mind_version);
    if (SwigDerivedClassHasMethod("on_abidump_start", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateswig_logger_base_1(SwigDirectorMethodon_abidump_start);
    if (SwigDerivedClassHasMethod("on_abidump_abi", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateswig_logger_base_2(SwigDirectorMethodon_abidump_abi);
    if (SwigDerivedClassHasMethod("on_abidump_end", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateswig_logger_base_3(SwigDirectorMethodon_abidump_end);
    if (SwigDerivedClassHasMethod("on_start_block", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateswig_logger_base_4(SwigDirectorMethodon_start_block);
    if (SwigDerivedClassHasMethod("on_accepted_block", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateswig_logger_base_5(SwigDirectorMethodon_accepted_block);
    if (SwigDerivedClassHasMethod("on_switch_forks", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateswig_logger_base_6(SwigDirectorMethodon_switch_forks);
    if (SwigDerivedClassHasMethod("on_error", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateswig_logger_base_7(SwigDirectorMethodon_error);
    if (SwigDerivedClassHasMethod("on_onblock", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateswig_logger_base_8(SwigDirectorMethodon_onblock);
    if (SwigDerivedClassHasMethod("on_applied_transaction", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateswig_logger_base_9(SwigDirectorMethodon_applied_transaction);
    if (SwigDerivedClassHasMethod("on_add_ram_correction", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateswig_logger_base_10(SwigDirectorMethodon_add_ram_correction);
    if (SwigDerivedClassHasMethod("on_input_action", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateswig_logger_base_11(SwigDirectorMethodon_input_action);
    if (SwigDerivedClassHasMethod("on_require_recipient", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateswig_logger_base_12(SwigDirectorMethodon_require_recipient);
    if (SwigDerivedClassHasMethod("on_send_inline", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateswig_logger_base_13(SwigDirectorMethodon_send_inline);
    if (SwigDerivedClassHasMethod("on_send_context_free_inline", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateswig_logger_base_14(SwigDirectorMethodon_send_context_free_inline);
    if (SwigDerivedClassHasMethod("on_cancel_deferred", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateswig_logger_base_15(SwigDirectorMethodon_cancel_deferred);
    if (SwigDerivedClassHasMethod("on_send_deferred", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateswig_logger_base_16(SwigDirectorMethodon_send_deferred);
    if (SwigDerivedClassHasMethod("on_create_deferred", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateswig_logger_base_17(SwigDirectorMethodon_create_deferred);
    if (SwigDerivedClassHasMethod("on_fail_deferred", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateswig_logger_base_18(SwigDirectorMethodon_fail_deferred);
    if (SwigDerivedClassHasMethod("on_create_table", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateswig_logger_base_19(SwigDirectorMethodon_create_table);
    if (SwigDerivedClassHasMethod("on_remove_table", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateswig_logger_base_20(SwigDirectorMethodon_remove_table);
    if (SwigDerivedClassHasMethod("on_db_store_i64", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateswig_logger_base_21(SwigDirectorMethodon_db_store_i64);
    if (SwigDerivedClassHasMethod("on_db_update_i64", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateswig_logger_base_22(SwigDirectorMethodon_db_update_i64);
    if (SwigDerivedClassHasMethod("on_db_remove_i64", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateswig_logger_base_23(SwigDirectorMethodon_db_remove_i64);
    if (SwigDerivedClassHasMethod("on_ram_event", swigMethodTypes24))
      swigDelegate24 = new SwigDelegateswig_logger_base_24(SwigDirectorMethodon_ram_event);
    if (SwigDerivedClassHasMethod("on_create_permission", swigMethodTypes25))
      swigDelegate25 = new SwigDelegateswig_logger_base_25(SwigDirectorMethodon_create_permission);
    if (SwigDerivedClassHasMethod("on_modify_permission", swigMethodTypes26))
      swigDelegate26 = new SwigDelegateswig_logger_base_26(SwigDirectorMethodon_modify_permission);
    if (SwigDerivedClassHasMethod("on_remove_permission", swigMethodTypes27))
      swigDelegate27 = new SwigDelegateswig_logger_base_27(SwigDirectorMethodon_remove_permission);
    NodeosSwigLoggerModulePINVOKE.swig_logger_base_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(swig_logger_base));
    return hasDerivedMethod;
  }

  private void SwigDirectorMethodon_deep_mind_version(global::System.IntPtr name, global::System.IntPtr major, global::System.IntPtr minor) {
    on_deep_mind_version(new SWIGTYPE_p_std__string(name, true), new SWIGTYPE_p_uint(major, true), new SWIGTYPE_p_uint(minor, true));
  }

  private void SwigDirectorMethodon_abidump_start(global::System.IntPtr block_num, global::System.IntPtr global_sequence_num) {
    on_abidump_start(new SWIGTYPE_p_uint32_t(block_num, true), new SWIGTYPE_p_uint64_t(global_sequence_num, true));
  }

  private void SwigDirectorMethodon_abidump_abi(global::System.IntPtr name, global::System.IntPtr abi_data) {
    on_abidump_abi(new SWIGTYPE_p_uint64_t(name, true), (abi_data == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(abi_data, false));
  }

  private void SwigDirectorMethodon_abidump_end() {
    on_abidump_end();
  }

  private void SwigDirectorMethodon_start_block(global::System.IntPtr start_block) {
    on_start_block(new SWIGTYPE_p_uint32_t(start_block, true));
  }

  private void SwigDirectorMethodon_accepted_block(global::System.IntPtr num, global::System.IntPtr blk) {
    on_accepted_block(new SWIGTYPE_p_uint32_t(num, true), (blk == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(blk, false));
  }

  private void SwigDirectorMethodon_switch_forks(global::System.IntPtr from_id, global::System.IntPtr to_id) {
    on_switch_forks((from_id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(from_id, false), (to_id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(to_id, false));
  }

  private void SwigDirectorMethodon_error(global::System.IntPtr id, global::System.IntPtr trx) {
    on_error((id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(id, false), (trx == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(trx, false));
  }

  private void SwigDirectorMethodon_onblock(global::System.IntPtr id, global::System.IntPtr trx) {
    on_onblock((id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(id, false), (trx == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(trx, false));
  }

  private void SwigDirectorMethodon_applied_transaction(global::System.IntPtr i, global::System.IntPtr traces) {
    on_applied_transaction(new SWIGTYPE_p_uint32_t(i, true), (traces == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(traces, false));
  }

  private void SwigDirectorMethodon_add_ram_correction(global::System.IntPtr action_id, global::System.IntPtr correction_id, global::System.IntPtr event_id, global::System.IntPtr payer, global::System.IntPtr delta) {
    on_add_ram_correction(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_int64_t(correction_id, true), new SWIGTYPE_p_std__string(event_id, true), new SWIGTYPE_p_uint64_t(payer, true), new SWIGTYPE_p_uint64_t(delta, true));
  }

  private void SwigDirectorMethodon_input_action(global::System.IntPtr action_id) {
    on_input_action(new SWIGTYPE_p_uint32_t(action_id, true));
  }

  private void SwigDirectorMethodon_require_recipient(global::System.IntPtr action_id) {
    on_require_recipient(new SWIGTYPE_p_uint32_t(action_id, true));
  }

  private void SwigDirectorMethodon_send_inline(global::System.IntPtr action_id) {
    on_send_inline(new SWIGTYPE_p_uint32_t(action_id, true));
  }

  private void SwigDirectorMethodon_send_context_free_inline(global::System.IntPtr action_id) {
    on_send_context_free_inline(new SWIGTYPE_p_uint32_t(action_id, true));
  }

  private void SwigDirectorMethodon_cancel_deferred(global::System.IntPtr qual, global::System.IntPtr action_id, global::System.IntPtr sender, global::System.IntPtr sender_id, global::System.IntPtr payer, global::System.IntPtr published, global::System.IntPtr delay, global::System.IntPtr expiration, global::System.IntPtr trx_id, global::System.IntPtr trx) {
    on_cancel_deferred(new SWIGTYPE_p___uint8_t(qual, true), new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_uint64_t(sender, true), (sender_id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(sender_id, false), new SWIGTYPE_p_uint64_t(payer, true), new SWIGTYPE_p_uint32_t(published, true), new SWIGTYPE_p_uint32_t(delay, true), new SWIGTYPE_p_uint32_t(expiration, true), (trx_id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(trx_id, false), (trx == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(trx, false));
  }

  private void SwigDirectorMethodon_send_deferred(global::System.IntPtr qual, global::System.IntPtr action_id, global::System.IntPtr sender, global::System.IntPtr sender_id, global::System.IntPtr payer, global::System.IntPtr published, global::System.IntPtr delay, global::System.IntPtr expiration, global::System.IntPtr trx_id, global::System.IntPtr trx) {
    on_send_deferred(new SWIGTYPE_p___uint8_t(qual, true), new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_uint64_t(sender, true), (sender_id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(sender_id, false), new SWIGTYPE_p_uint64_t(payer, true), new SWIGTYPE_p_uint32_t(published, true), new SWIGTYPE_p_uint32_t(delay, true), new SWIGTYPE_p_uint32_t(expiration, true), (trx_id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(trx_id, false), (trx == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(trx, false));
  }

  private void SwigDirectorMethodon_create_deferred(global::System.IntPtr qual, global::System.IntPtr action_id, global::System.IntPtr sender, global::System.IntPtr sender_id, global::System.IntPtr payer, global::System.IntPtr published, global::System.IntPtr delay, global::System.IntPtr expiration, global::System.IntPtr trx_id, global::System.IntPtr trx) {
    on_create_deferred(new SWIGTYPE_p___uint8_t(qual, true), new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_uint64_t(sender, true), (sender_id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(sender_id, false), new SWIGTYPE_p_uint64_t(payer, true), new SWIGTYPE_p_uint32_t(published, true), new SWIGTYPE_p_uint32_t(delay, true), new SWIGTYPE_p_uint32_t(expiration, true), (trx_id == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(trx_id, false), (trx == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(trx, false));
  }

  private void SwigDirectorMethodon_fail_deferred(global::System.IntPtr action_id) {
    on_fail_deferred(new SWIGTYPE_p_uint32_t(action_id, true));
  }

  private void SwigDirectorMethodon_create_table(global::System.IntPtr action_id, global::System.IntPtr code, global::System.IntPtr scope, global::System.IntPtr table, global::System.IntPtr payer) {
    on_create_table(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_uint64_t(code, true), new SWIGTYPE_p_uint64_t(scope, true), new SWIGTYPE_p_uint64_t(table, true), new SWIGTYPE_p_uint64_t(payer, true));
  }

  private void SwigDirectorMethodon_remove_table(global::System.IntPtr action_id, global::System.IntPtr code, global::System.IntPtr scope, global::System.IntPtr table, global::System.IntPtr payer) {
    on_remove_table(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_uint64_t(code, true), new SWIGTYPE_p_uint64_t(scope, true), new SWIGTYPE_p_uint64_t(table, true), new SWIGTYPE_p_uint64_t(payer, true));
  }

  private void SwigDirectorMethodon_db_store_i64(global::System.IntPtr action_id, global::System.IntPtr payer, global::System.IntPtr table_code, global::System.IntPtr scope, global::System.IntPtr table_name, global::System.IntPtr primkey, global::System.IntPtr ndata) {
    on_db_store_i64(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_uint64_t(payer, true), new SWIGTYPE_p_uint64_t(table_code, true), new SWIGTYPE_p_uint64_t(scope, true), new SWIGTYPE_p_uint64_t(table_name, true), new SWIGTYPE_p_uint64_t(primkey, true), (ndata == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(ndata, false));
  }

  private void SwigDirectorMethodon_db_update_i64(global::System.IntPtr action_id, global::System.IntPtr payer, global::System.IntPtr table_code, global::System.IntPtr scope, global::System.IntPtr table_name, global::System.IntPtr primkey, global::System.IntPtr odata, global::System.IntPtr ndata) {
    on_db_update_i64(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_uint64_t(payer, true), new SWIGTYPE_p_uint64_t(table_code, true), new SWIGTYPE_p_uint64_t(scope, true), new SWIGTYPE_p_uint64_t(table_name, true), new SWIGTYPE_p_uint64_t(primkey, true), (odata == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(odata, false), (ndata == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(ndata, false));
  }

  private void SwigDirectorMethodon_db_remove_i64(global::System.IntPtr action_id, global::System.IntPtr payer, global::System.IntPtr table_code, global::System.IntPtr scope, global::System.IntPtr table_name, global::System.IntPtr primkey, global::System.IntPtr odata) {
    on_db_remove_i64(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_uint64_t(payer, true), new SWIGTYPE_p_uint64_t(table_code, true), new SWIGTYPE_p_uint64_t(scope, true), new SWIGTYPE_p_uint64_t(table_name, true), new SWIGTYPE_p_uint64_t(primkey, true), (odata == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(odata, false));
  }

  private void SwigDirectorMethodon_ram_event(global::System.IntPtr action_id, global::System.IntPtr event_id, global::System.IntPtr family, global::System.IntPtr operation, global::System.IntPtr legacy_tag, global::System.IntPtr payer, global::System.IntPtr new_usage, global::System.IntPtr delta) {
    on_ram_event(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_std__basic_stringT_char_t(event_id, true), new SWIGTYPE_p_std__basic_stringT_char_t(family, true), new SWIGTYPE_p_std__basic_stringT_char_t(operation, true), new SWIGTYPE_p_std__basic_stringT_char_t(legacy_tag, true), new SWIGTYPE_p_uint64_t(payer, true), new SWIGTYPE_p_uint64_t(new_usage, true), new SWIGTYPE_p_int64_t(delta, true));
  }

  private void SwigDirectorMethodon_create_permission(global::System.IntPtr action_id, global::System.IntPtr permission_id, global::System.IntPtr data) {
    on_create_permission(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_int64_t(permission_id, true), (data == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(data, false));
  }

  private void SwigDirectorMethodon_modify_permission(global::System.IntPtr action_id, global::System.IntPtr permission_id, global::System.IntPtr opdata, global::System.IntPtr npdata) {
    on_modify_permission(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_int64_t(permission_id, true), (opdata == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(opdata, false), (npdata == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(npdata, false));
  }

  private void SwigDirectorMethodon_remove_permission(global::System.IntPtr action_id, global::System.IntPtr permission_id, global::System.IntPtr data) {
    on_remove_permission(new SWIGTYPE_p_uint32_t(action_id, true), new SWIGTYPE_p_int64_t(permission_id, true), (data == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(data, false));
  }

  public delegate void SwigDelegateswig_logger_base_0(global::System.IntPtr name, global::System.IntPtr major, global::System.IntPtr minor);
  public delegate void SwigDelegateswig_logger_base_1(global::System.IntPtr block_num, global::System.IntPtr global_sequence_num);
  public delegate void SwigDelegateswig_logger_base_2(global::System.IntPtr name, global::System.IntPtr abi_data);
  public delegate void SwigDelegateswig_logger_base_3();
  public delegate void SwigDelegateswig_logger_base_4(global::System.IntPtr start_block);
  public delegate void SwigDelegateswig_logger_base_5(global::System.IntPtr num, global::System.IntPtr blk);
  public delegate void SwigDelegateswig_logger_base_6(global::System.IntPtr from_id, global::System.IntPtr to_id);
  public delegate void SwigDelegateswig_logger_base_7(global::System.IntPtr id, global::System.IntPtr trx);
  public delegate void SwigDelegateswig_logger_base_8(global::System.IntPtr id, global::System.IntPtr trx);
  public delegate void SwigDelegateswig_logger_base_9(global::System.IntPtr i, global::System.IntPtr traces);
  public delegate void SwigDelegateswig_logger_base_10(global::System.IntPtr action_id, global::System.IntPtr correction_id, global::System.IntPtr event_id, global::System.IntPtr payer, global::System.IntPtr delta);
  public delegate void SwigDelegateswig_logger_base_11(global::System.IntPtr action_id);
  public delegate void SwigDelegateswig_logger_base_12(global::System.IntPtr action_id);
  public delegate void SwigDelegateswig_logger_base_13(global::System.IntPtr action_id);
  public delegate void SwigDelegateswig_logger_base_14(global::System.IntPtr action_id);
  public delegate void SwigDelegateswig_logger_base_15(global::System.IntPtr qual, global::System.IntPtr action_id, global::System.IntPtr sender, global::System.IntPtr sender_id, global::System.IntPtr payer, global::System.IntPtr published, global::System.IntPtr delay, global::System.IntPtr expiration, global::System.IntPtr trx_id, global::System.IntPtr trx);
  public delegate void SwigDelegateswig_logger_base_16(global::System.IntPtr qual, global::System.IntPtr action_id, global::System.IntPtr sender, global::System.IntPtr sender_id, global::System.IntPtr payer, global::System.IntPtr published, global::System.IntPtr delay, global::System.IntPtr expiration, global::System.IntPtr trx_id, global::System.IntPtr trx);
  public delegate void SwigDelegateswig_logger_base_17(global::System.IntPtr qual, global::System.IntPtr action_id, global::System.IntPtr sender, global::System.IntPtr sender_id, global::System.IntPtr payer, global::System.IntPtr published, global::System.IntPtr delay, global::System.IntPtr expiration, global::System.IntPtr trx_id, global::System.IntPtr trx);
  public delegate void SwigDelegateswig_logger_base_18(global::System.IntPtr action_id);
  public delegate void SwigDelegateswig_logger_base_19(global::System.IntPtr action_id, global::System.IntPtr code, global::System.IntPtr scope, global::System.IntPtr table, global::System.IntPtr payer);
  public delegate void SwigDelegateswig_logger_base_20(global::System.IntPtr action_id, global::System.IntPtr code, global::System.IntPtr scope, global::System.IntPtr table, global::System.IntPtr payer);
  public delegate void SwigDelegateswig_logger_base_21(global::System.IntPtr action_id, global::System.IntPtr payer, global::System.IntPtr table_code, global::System.IntPtr scope, global::System.IntPtr table_name, global::System.IntPtr primkey, global::System.IntPtr ndata);
  public delegate void SwigDelegateswig_logger_base_22(global::System.IntPtr action_id, global::System.IntPtr payer, global::System.IntPtr table_code, global::System.IntPtr scope, global::System.IntPtr table_name, global::System.IntPtr primkey, global::System.IntPtr odata, global::System.IntPtr ndata);
  public delegate void SwigDelegateswig_logger_base_23(global::System.IntPtr action_id, global::System.IntPtr payer, global::System.IntPtr table_code, global::System.IntPtr scope, global::System.IntPtr table_name, global::System.IntPtr primkey, global::System.IntPtr odata);
  public delegate void SwigDelegateswig_logger_base_24(global::System.IntPtr action_id, global::System.IntPtr event_id, global::System.IntPtr family, global::System.IntPtr operation, global::System.IntPtr legacy_tag, global::System.IntPtr payer, global::System.IntPtr new_usage, global::System.IntPtr delta);
  public delegate void SwigDelegateswig_logger_base_25(global::System.IntPtr action_id, global::System.IntPtr permission_id, global::System.IntPtr data);
  public delegate void SwigDelegateswig_logger_base_26(global::System.IntPtr action_id, global::System.IntPtr permission_id, global::System.IntPtr opdata, global::System.IntPtr npdata);
  public delegate void SwigDelegateswig_logger_base_27(global::System.IntPtr action_id, global::System.IntPtr permission_id, global::System.IntPtr data);

  private SwigDelegateswig_logger_base_0 swigDelegate0;
  private SwigDelegateswig_logger_base_1 swigDelegate1;
  private SwigDelegateswig_logger_base_2 swigDelegate2;
  private SwigDelegateswig_logger_base_3 swigDelegate3;
  private SwigDelegateswig_logger_base_4 swigDelegate4;
  private SwigDelegateswig_logger_base_5 swigDelegate5;
  private SwigDelegateswig_logger_base_6 swigDelegate6;
  private SwigDelegateswig_logger_base_7 swigDelegate7;
  private SwigDelegateswig_logger_base_8 swigDelegate8;
  private SwigDelegateswig_logger_base_9 swigDelegate9;
  private SwigDelegateswig_logger_base_10 swigDelegate10;
  private SwigDelegateswig_logger_base_11 swigDelegate11;
  private SwigDelegateswig_logger_base_12 swigDelegate12;
  private SwigDelegateswig_logger_base_13 swigDelegate13;
  private SwigDelegateswig_logger_base_14 swigDelegate14;
  private SwigDelegateswig_logger_base_15 swigDelegate15;
  private SwigDelegateswig_logger_base_16 swigDelegate16;
  private SwigDelegateswig_logger_base_17 swigDelegate17;
  private SwigDelegateswig_logger_base_18 swigDelegate18;
  private SwigDelegateswig_logger_base_19 swigDelegate19;
  private SwigDelegateswig_logger_base_20 swigDelegate20;
  private SwigDelegateswig_logger_base_21 swigDelegate21;
  private SwigDelegateswig_logger_base_22 swigDelegate22;
  private SwigDelegateswig_logger_base_23 swigDelegate23;
  private SwigDelegateswig_logger_base_24 swigDelegate24;
  private SwigDelegateswig_logger_base_25 swigDelegate25;
  private SwigDelegateswig_logger_base_26 swigDelegate26;
  private SwigDelegateswig_logger_base_27 swigDelegate27;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(SWIGTYPE_p_std__string), typeof(SWIGTYPE_p_uint), typeof(SWIGTYPE_p_uint) };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint64_t) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_int64_t), typeof(SWIGTYPE_p_std__string), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t) };
  private static global::System.Type[] swigMethodTypes13 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t) };
  private static global::System.Type[] swigMethodTypes14 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t) };
  private static global::System.Type[] swigMethodTypes15 = new global::System.Type[] { typeof(SWIGTYPE_p___uint8_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes16 = new global::System.Type[] { typeof(SWIGTYPE_p___uint8_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes17 = new global::System.Type[] { typeof(SWIGTYPE_p___uint8_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes18 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t) };
  private static global::System.Type[] swigMethodTypes19 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t) };
  private static global::System.Type[] swigMethodTypes20 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t) };
  private static global::System.Type[] swigMethodTypes21 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes22 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes23 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes24 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_std__basic_stringT_char_t), typeof(SWIGTYPE_p_std__basic_stringT_char_t), typeof(SWIGTYPE_p_std__basic_stringT_char_t), typeof(SWIGTYPE_p_std__basic_stringT_char_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_uint64_t), typeof(SWIGTYPE_p_int64_t) };
  private static global::System.Type[] swigMethodTypes25 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_int64_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes26 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_int64_t), typeof(SWIGTYPE_p_uint8_t), typeof(SWIGTYPE_p_uint8_t) };
  private static global::System.Type[] swigMethodTypes27 = new global::System.Type[] { typeof(SWIGTYPE_p_uint32_t), typeof(SWIGTYPE_p_int64_t), typeof(SWIGTYPE_p_uint8_t) };
}
